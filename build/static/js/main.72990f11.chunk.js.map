{"version":3,"sources":["components/Data.js","components/actions/actions.js","components/reducers/DataAdded.js","index.js"],"names":["Data","props","state","min_number","max_number","reading_data","data","socket","io","path","AddNumber","sendData","ev","preventDefault","emit","min","max","this","on","addResult","dataInformation","setState","currentDataReceived","concat","length","shift","className","type","placeholder","value","onChange","target","onClick","id","map","reading_result","key","React","Component","connect","dispatch","payload","initialState","DataAdded","action","store","createStore","console","log","getState","App","ReactDOM","render","document","getElementById"],"mappings":"4SAMMA,E,kDAEF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,WAAY,GACZC,WAAW,GACXC,aAAc,GACdC,KAAM,IAGV,EAAKC,OAASC,IAAG,iBAAkB,CAACC,KAAK,UACzC,EAAKR,MAAMS,UAAU,EAAKR,MAAMI,MAEhC,EAAKK,SAAW,SAAAC,GACZA,EAAGC,iBACH,EAAKN,OAAOO,KAAK,YAAY,CACzBC,IAAK,EAAKb,MAAMC,WAChBa,IAAK,EAAKd,MAAME,cAhBV,E,gEAwBjB,IAAD,OACIa,KAAKV,OAAOW,GAAG,iBAAiB,SAACZ,GAC7Ba,EAAUb,MAGd,IAAMa,EAAY,SAAAC,GAEd,EAAKC,SAAS,CAAChB,aAAae,IAC5B,IACME,EADc,EAAKpB,MAAMI,KACSiB,OAAO,EAAKrB,MAAMG,cAC1D,EAAKgB,SAAS,CAACf,KAAKgB,O,+BAOnB,IAAD,OACGhB,EAAQW,KAAKf,MAAbI,KAEP,OADGW,KAAKf,MAAMI,KAAKkB,OAAS,IAAKP,KAAKf,MAAMI,KAAKmB,QAE7C,yBAAKC,UAAU,kBACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,mBACX,2BAAOA,UAAU,SAAjB,qBAEA,0BAAMA,UAAU,uBACR,2BAAOC,KAAK,OAAOC,YAAY,MAAMC,MAAOZ,KAAKf,MAAMC,WAAY2B,SAAU,SAAAlB,GAAE,OAAE,EAAKS,SAAS,CAAClB,WAAWS,EAAGmB,OAAOF,WACrH,2BAAOF,KAAK,OAAOC,YAAY,MAAMC,MAAOZ,KAAKf,MAAME,WAAY0B,SAAU,SAAAlB,GAAE,OAAE,EAAKS,SAAS,CAACjB,WAAWQ,EAAGmB,OAAOF,WACrH,4BAAQG,QAASf,KAAKN,UAAtB,oBAEA,yBAAKe,UAAU,4BACf,2BAAOC,KAAK,OAAOC,YAAY,kBAAkBC,MAAOZ,KAAKf,MAAMG,iBAInF,yBAAKqB,UAAU,qBACX,2BAAOA,UAAU,iBAAjB,WACA,yBAAKA,UAAU,mBACP,2BAAOO,GAAG,cACd,+BACI,4BACA,wCAGH3B,EAAK4B,KAAI,SAAAC,GAAc,OACxB,2BAAOC,IAAI,QACP,4BACI,4BAAKD,gB,GA1EdE,IAAMC,WA0FVC,cAAQ,MAJI,SAAAC,GACvB,MAAO,CAAC9B,UAAU,SAAAJ,GAAI,OAAIkC,EC7FL,SAAAlC,GAAI,MAAK,CAC9BqB,KAAM,eACNc,QAAUnC,GD2FyBI,CAAUJ,QAGlCiC,CAAiCvC,G,uBEhG1C0C,EAAe,CACjBpC,KAAO,IAcIqC,EAXG,WAAkC,IAAjCzC,EAAgC,uDAAxBwC,EAAcE,EAAU,uCAC/C,OAAOA,EAAOjB,MACV,IAAK,eACD,kCACOzB,GADP,IAEII,KAAK,GAAD,mBAAKJ,EAAMI,MAAX,CAAgBsC,EAAOH,YAE/B,QACI,OAAOvC,ICJjB2C,EAAQC,YAAYH,GAC1BI,QAAQC,IAAIH,EAAMI,Y,IAEZC,E,uKAEE,OACI,kBAAC,EAAD,U,GAHMb,IAAMC,WAOTY,YAEfC,IAASC,OACT,kBAAC,IAAD,CAAUP,MAAOA,GACb,kBAAC,EAAD,OAEJQ,SAASC,eAAe,W","file":"static/js/main.72990f11.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../index.scss'\r\nimport io from \"socket.io-client\"\r\nimport {connect} from \"react-redux\"\r\nimport {AddNumber} from \"../components/actions/actions\"\r\n\r\nclass Data extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            min_number: '',\r\n            max_number:'',\r\n            reading_data: '',\r\n            data: []\r\n        }\r\n\r\n        this.socket = io('localhost:8000', {path:\"/test\"})\r\n        this.props.AddNumber(this.state.data)\r\n        \r\n        this.sendData = ev => {\r\n            ev.preventDefault();\r\n            this.socket.emit('send_data',{\r\n                min: this.state.min_number,\r\n                max: this.state.max_number\r\n            })\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    componentDidMount()\r\n    {\r\n        this.socket.on('data_generate', (data) =>{\r\n            addResult(data)\r\n        })\r\n\r\n        const addResult = dataInformation => {\r\n\r\n            this.setState({reading_data:dataInformation})\r\n            const currentData = this.state.data;\r\n            const currentDataReceived = currentData.concat(this.state.reading_data)\r\n            this.setState({data:currentDataReceived})\r\n            \r\n        }\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        const {data} = this.state;\r\n        if(this.state.data.length > 10) {this.state.data.shift()}\r\n        return(\r\n            <div className=\"main_container\" >\r\n            <nav className=\"container\">\r\n                <div className=\"title-container\">\r\n                    <label className=\"title\">Random Generator</label>\r\n                </div>\r\n                    <form className=\"container-num-input\">\r\n                            <input type=\"text\" placeholder=\"Min\" value={this.state.min_number} onChange={ev=>this.setState({min_number:ev.target.value})}></input>\r\n                            <input type=\"text\" placeholder=\"Max\" value={this.state.max_number} onChange={ev=>this.setState({max_number:ev.target.value})}></input>\r\n                            <button onClick={this.sendData}>Received Values</button>\r\n                    </form>\r\n                            <div className=\"container-received-input\">\r\n                            <input type=\"text\" placeholder=\"Received Number\" value={this.state.reading_data}></input>\r\n                            </div>\r\n\r\n            </nav>\r\n            <nav className=\"container-history\">\r\n                <label className=\"title-history\">History</label>\r\n                <div className=\"container-table\">\r\n                        <table id=\"sensorList\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th>Number</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {data.map(reading_result =>\r\n                    <tbody key=\"none\">\r\n                        <tr>\r\n                            <td>{reading_result}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                    )}\r\n                    </table>\r\n                </div>\r\n            </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {AddNumber:data => dispatch(AddNumber(data))}\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Data);\r\n","export const AddNumber = data => ({\r\n    type: \"AddingNumber\",\r\n    payload : data\r\n});","const initialState = {\r\n    data : []\r\n}\r\n\r\nconst DataAdded = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case 'AddingNumber':\r\n            return{\r\n                ...state,\r\n                data:[...state.data,action.payload]\r\n            }\r\n            default:\r\n                return state;\r\n    }\r\n}\r\nexport default DataAdded;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport Data from '../src/components/Data'\r\nimport {createStore} from \"redux\"\r\nimport {Provider} from \"react-redux\"\r\nimport DataAdded from \"../src/components/reducers/DataAdded\"\r\n\r\nconst store = createStore(DataAdded)\r\nconsole.log(store.getState())\r\n\r\nclass App extends React.Component{\r\n    render(){\r\n        return(\r\n            <Data/>\r\n        )\r\n    }\r\n}\r\nexport default App;\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <App />\r\n</Provider>, \r\ndocument.getElementById('root'))\r\n"],"sourceRoot":""}