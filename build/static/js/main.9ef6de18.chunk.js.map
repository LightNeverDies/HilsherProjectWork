{"version":3,"sources":["components/Data.js","components/actions/actions.js","components/reducers/DataAdded.js","index.js"],"names":["Data","props","state","min_number","max_number","reading_data","reduxResult","data","sendData","ev","preventDefault","fetch","method","headers","body","JSON","stringify","value","then","history","this","className","id","map","reading_result","key","result","undefined","length","shift","type","placeholder","onChange","setState","target","onClick","readOnly","React","Component","connect","dispatch","AddNumber","payload","initialState","DataAdded","action","newArray","push","console","log","persistedState","serializedState","localStorage","getItem","parse","e","loadFromLocalStorage","store","createStore","subscribe","setItem","saveToLocalStorage","getState","App","ReactDOM","render","document","getElementById"],"mappings":"6QAOMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,WAAY,GACZC,WAAY,GACZC,aAAc,GACdC,YAAa,GACbC,KAAM,IAKR,EAAKC,SAAW,SAACC,GACfA,EAAGC,iBAOHC,MAAM,IAAK,CACTC,OAAQ,OACRC,QAAS,CAAC,eAAe,oBACzBC,KAAMC,KAAKC,UAAU,CACnB,IAAO,EAAKd,MAAMC,WAAWc,MAC7B,IAAO,EAAKf,MAAME,WAAWa,QAC5BC,QA1BU,E,kGA4DT,IAAD,OACDC,EAAUC,KAAKnB,MAAMM,KAAQ,yBAAKc,UAAU,qBAC9C,2BAAOA,UAAU,iBAAjB,WACA,yBAAKA,UAAU,mBACP,2BAAOC,GAAG,cACd,+BACI,4BACA,wCAIHF,KAAKnB,MAAMM,KAAKgB,KAAI,SAACC,GAAD,OAAoB,2BAAOC,IAAKD,EAAeF,IAChE,4BACI,4BAAKE,EAAeE,gBAK1B,KAIV,YAHwBC,IAApBP,KAAKnB,MAAMM,MAA6Ba,KAAKnB,MAAMM,KAAKqB,QAAU,IACpER,KAAKnB,MAAMM,KAAKsB,QAGV,yBAAKR,UAAU,kBACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,mBACX,2BAAOA,UAAU,SAAjB,qBAEA,0BAAMA,UAAU,uBACR,2BAAOS,KAAK,OAAOC,YAAY,MAAMd,MAAOG,KAAKlB,MAAMC,WAAY6B,SAAU,SAACvB,GAAD,OAAQ,EAAKwB,SAAS,CAAE9B,WAAYM,EAAGyB,OAAOjB,WAC3H,2BAAOa,KAAK,OAAOC,YAAY,MAAMd,MAAOG,KAAKlB,MAAME,WAAY4B,SAAU,SAACvB,GAAD,OAAQ,EAAKwB,SAAS,CAAE7B,WAAYK,EAAGyB,OAAOjB,WAC3H,4BAAQkB,QAASf,KAAKZ,UAAtB,oBAEA,yBAAKa,UAAU,4BACf,2BAAOS,KAAK,OAAOC,YAAY,kBAAkBd,MAAOG,KAAKlB,MAAMG,aAAaqB,OAAQU,UAAQ,MAI3GjB,O,GAnGEkB,IAAMC,WA6GVC,eAJS,SAACrC,GAAD,MAAY,CAAEK,KAAML,EAAMK,SAEvB,SAACiC,GAAD,MAAe,CAAEC,UAAW,SAAClC,GAAD,OAAUiC,EClHxC,SAAAjC,GAAI,MAAK,CAC9BuB,KAAM,eACNY,QAAUnC,GDgH4DkC,CAAUlC,QAErEgC,CAA6CvC,G,gBEpHtD2C,EAAe,CAAEpC,KAAO,IAefqC,EAbG,WAAkC,IAAjC1C,EAAgC,uDAAxByC,EAAcE,EAAU,uCAC/C,OAAOA,EAAOf,MACV,IAAK,eAED,IAAIgB,EAAW,GAIf,OAHAA,EAASC,KAAT,MAAAD,EAAQ,YAASD,EAAOH,UAExBM,QAAQC,IAAIH,GACL,2BAAI5C,GAAX,IAAkBK,KAAMuC,IACxB,QACI,OAAO5C,ICgBvB,IAAMgD,EAXN,WACE,IACE,IAAMC,EAAkBC,aAAaC,QAAQ,SAC7C,GAAwB,OAApBF,EAA0B,OAC9B,OAAOpC,KAAKuC,MAAMH,GAClB,MAAOI,GAEP,YADAP,QAAQC,IAAIM,IAKOC,GAEjBC,EAAQC,YACZd,EACAM,GAIFO,EAAME,WAAU,kBA5BhB,SAA4BzD,GAC1B,IACE,IAAMiD,EAAkBpC,KAAKC,UAAUd,GACvCkD,aAAaQ,QAAQ,QAAST,GAC9B,MAAOI,GACPP,QAAQC,IAAIM,IAuBMM,CAAmBJ,EAAMK,e,IAEzCC,E,uKAEF,OACA,kBAAC,EAAD,U,GAHc1B,IAAMC,WAOTyB,YAEfC,IAASC,OACT,kBAAC,IAAD,CAAUR,MAAOA,GACb,kBAAC,EAAD,OAEJS,SAASC,eAAe,W","file":"static/js/main.9ef6de18.chunk.js","sourcesContent":["import React from 'react';\nimport '../index.scss';\n// import io from 'socket.io-client';\nimport { connect } from 'react-redux';\nimport { AddNumber } from './actions/actions';\n\n\nclass Data extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      min_number: '',\n      max_number: '',\n      reading_data: '',\n      reduxResult: [],\n      data: [],\n    };\n\n    // this.socket = io('localhost:8000', { path: '/test' });\n\n    this.sendData = (ev) => {\n      ev.preventDefault();\n      // this.socket.emit('send_data', {\n      //   min: this.state.min_number,\n      //   max: this.state.max_number,\n      // });\n      // const dataSended = {min: this.state.min_number, max: this.state.max_number}\n      // console.log(dataSended)\n      fetch('/', {\n        method: 'POST',\n        headers: {'Content-Type':'application/json'},\n        body: JSON.stringify({\n          \"min\": this.state.min_number.value,\n          \"max\": this.state.max_number.value,\n        }).then\n      });\n    }\n    //   const postData = {\n    //     method: 'POST',\n    //     headers:{\n    //       'Content-Type' : 'application/json'\n    //     },\n    //     body: JSON.stringify(dataSended)\n    //   };\n    //   fetch('localhost', postData);\n    //   console.log(postData)\n    // };\n    \n  }\n\n  componentDidMount() {\n    const addResult = (dataInformation) => {\n      this.setState({ reading_data: dataInformation });\n\n      // this.socket.on('data_generate', (data) => {\n      //   addResult(data);\n      // });\n\n      const currentData = this.props.data ? this.props.data : [];\n      console.log(currentData);\n      const currentDataReceived = currentData.concat(this.state.reading_data);\n      this.setState({ data: currentDataReceived });\n\n      this.state.reduxResult = this.props.AddNumber(currentDataReceived);\n      console.log(this.state.reduxResult);\n    };\n  }\n\n  render() {\n    const history = this.props.data ? (<nav className=\"container-history\">\n        <label className=\"title-history\">History</label>\n        <div className=\"container-table\">\n                <table id=\"sensorList\">\n            <thead>\n                <tr>\n                <th>Number</th>\n                </tr>\n            </thead>\n\n            {this.props.data.map((reading_result) => <tbody key={reading_result.id}>\n                <tr>\n                    <td>{reading_result.result}</td>\n                </tr>\n            </tbody>)}\n            </table>\n        </div>\n    </nav>) : null;\n    if (this.props.data === undefined ? false : this.props.data.length >= 10) {\n      this.props.data.shift();\n    }\n    return (\n            <div className=\"main_container\" >\n            <nav className=\"container\">\n                <div className=\"title-container\">\n                    <label className=\"title\">Random Generator</label>\n                </div>\n                    <form className=\"container-num-input\">\n                            <input type=\"text\" placeholder=\"Min\" value={this.state.min_number} onChange={(ev) => this.setState({ min_number: ev.target.value })}></input>\n                            <input type=\"text\" placeholder=\"Max\" value={this.state.max_number} onChange={(ev) => this.setState({ max_number: ev.target.value })}></input>\n                            <button onClick={this.sendData}>Received Values</button>\n                    </form>\n                            <div className=\"container-received-input\">\n                            <input type=\"text\" placeholder=\"Received Number\" value={this.state.reading_data.result} readOnly></input>\n                            </div>\n\n            </nav>\n                {history}\n            </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ data: state.data });\n\nconst mapDispatchToProps = (dispatch) => ({ AddNumber: (data) => dispatch(AddNumber(data)) });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Data);\n","export const AddNumber = data => ({\r\n    type: \"AddingNumber\",\r\n    payload : data\r\n});","const initialState = { data : [] };\r\n\r\nconst DataAdded = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case 'AddingNumber':\r\n\r\n            let newArray = [];\r\n            newArray.push(...action.payload)\r\n\r\n            console.log(newArray);\r\n            return {...state, data: newArray}\r\n            default:\r\n                return state;\r\n    }\r\n}\r\nexport default DataAdded;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport Data from './components/Data';\nimport DataAdded from './components/reducers/DataAdded';\n\nfunction saveToLocalStorage(state) {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction loadFromLocalStorage() {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) return undefined;\n    return JSON.parse(serializedState);\n  } catch (e) {\n    console.log(e);\n    return undefined;\n  }\n}\n\nconst persistedState = loadFromLocalStorage();\n\nconst store = createStore(\n  DataAdded,\n  persistedState,\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nstore.subscribe(() => saveToLocalStorage(store.getState()));\n\nclass App extends React.Component {\n  render() {\n    return (\n    <Data/>\n    );\n  }\n}\nexport default App;\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>,\ndocument.getElementById('root'),\n);\n"],"sourceRoot":""}